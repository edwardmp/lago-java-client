/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseBadRequest;
import org.openapitools.client.model.ApiResponseNotFound;
import org.openapitools.client.model.ApiResponseUnauthorized;
import org.openapitools.client.model.ApiResponseUnprocessableEntity;
import org.openapitools.client.model.BillableMetric;
import org.openapitools.client.model.BillableMetricInput;
import org.openapitools.client.model.BillableMetricsPaginated;
import org.openapitools.client.model.GroupsPaginated;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BillableMetricsApi
 */
@Disabled
public class BillableMetricsApiTest {

    private final BillableMetricsApi api = new BillableMetricsApi();

    /**
     * Create a new billable metric
     *
     * Create a new billable metric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBillableMetricTest() throws ApiException {
        BillableMetricInput billableMetricInput = null;
        BillableMetric response = api.createBillableMetric(billableMetricInput);
        // TODO: test validations
    }

    /**
     * Delete a billable metric
     *
     * Delete a billable metric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyBillableMetricTest() throws ApiException {
        String code = null;
        BillableMetric response = api.destroyBillableMetric(code);
        // TODO: test validations
    }

    /**
     * Find Billable metric groups
     *
     * Find all billable metric groups in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllBillableMetricGroupsTest() throws ApiException {
        String code = null;
        Integer page = null;
        Integer perPage = null;
        GroupsPaginated response = api.findAllBillableMetricGroups(code, page, perPage);
        // TODO: test validations
    }

    /**
     * Find Billable metrics
     *
     * Find all billable metrics in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllBillableMetricsTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        BillableMetricsPaginated response = api.findAllBillableMetrics(page, perPage);
        // TODO: test validations
    }

    /**
     * Find billable metric by code
     *
     * Return a single billable metric
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findBillableMetricTest() throws ApiException {
        String code = null;
        BillableMetric response = api.findBillableMetric(code);
        // TODO: test validations
    }

    /**
     * Update an existing billable metric
     *
     * Update an existing billable metric by code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBillableMetricTest() throws ApiException {
        String code = null;
        BillableMetricInput billableMetricInput = null;
        BillableMetric response = api.updateBillableMetric(code, billableMetricInput);
        // TODO: test validations
    }

}
