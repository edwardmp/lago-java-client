/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseBadRequest;
import org.openapitools.client.model.ApiResponseNotFound;
import org.openapitools.client.model.ApiResponseUnauthorized;
import org.openapitools.client.model.ApiResponseUnprocessableEntity;
import org.openapitools.client.model.Plan;
import org.openapitools.client.model.PlanInput;
import org.openapitools.client.model.PlansPaginated;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PlansApi
 */
@Disabled
public class PlansApiTest {

    private final PlansApi api = new PlansApi();

    /**
     * Create a new plan
     *
     * Create a new plan
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createPlanTest() throws ApiException {
        PlanInput planInput = null;
        Plan response = api.createPlan(planInput);
        // TODO: test validations
    }

    /**
     * Delete a plan
     *
     * Delete a plan
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyPlanTest() throws ApiException {
        String code = null;
        Plan response = api.destroyPlan(code);
        // TODO: test validations
    }

    /**
     * Find plans
     *
     * Find all plans in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllPlansTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        PlansPaginated response = api.findAllPlans(page, perPage);
        // TODO: test validations
    }

    /**
     * Find plan by code
     *
     * Return a single plan
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findPlanTest() throws ApiException {
        String code = null;
        Plan response = api.findPlan(code);
        // TODO: test validations
    }

    /**
     * Update an existing plan
     *
     * Update an existing plan by code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePlanTest() throws ApiException {
        String code = null;
        PlanInput planInput = null;
        Plan response = api.updatePlan(code, planInput);
        // TODO: test validations
    }

}
