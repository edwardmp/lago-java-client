/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseBadRequest;
import org.openapitools.client.model.ApiResponseForbidden;
import org.openapitools.client.model.ApiResponseNotFound;
import org.openapitools.client.model.ApiResponseUnauthorized;
import org.openapitools.client.model.ApiResponseUnprocessableEntity;
import org.openapitools.client.model.AppliedCoupon;
import org.openapitools.client.model.Customer;
import org.openapitools.client.model.CustomerInput;
import org.openapitools.client.model.CustomerUsage;
import org.openapitools.client.model.CustomersPaginated;
import org.openapitools.client.model.GetCustomerPortalUrl200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CustomersApi
 */
@Disabled
public class CustomersApiTest {

    private final CustomersApi api = new CustomersApi();

    /**
     * Create a customer
     *
     * Create a new customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCustomerTest() throws ApiException {
        CustomerInput customerInput = null;
        Customer response = api.createCustomer(customerInput);
        // TODO: test validations
    }

    /**
     * Delete customer&#39;s appplied coupon
     *
     * Delete customer&#39;s appplied coupon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAppliedCouponTest() throws ApiException {
        String customerExternalId = null;
        String appliedCouponId = null;
        AppliedCoupon response = api.deleteAppliedCoupon(customerExternalId, appliedCouponId);
        // TODO: test validations
    }

    /**
     * Delete a customer
     *
     * Return the deleted customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyCustomerTest() throws ApiException {
        String externalId = null;
        Customer response = api.destroyCustomer(externalId);
        // TODO: test validations
    }

    /**
     * Find customers
     *
     * Find all customers in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllCustomersTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        CustomersPaginated response = api.findAllCustomers(page, perPage);
        // TODO: test validations
    }

    /**
     * Find customer by external ID
     *
     * Return a single customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCustomerTest() throws ApiException {
        String externalId = null;
        Customer response = api.findCustomer(externalId);
        // TODO: test validations
    }

    /**
     * Find customer current usage
     *
     * Return a customer current usage
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCustomerCurrentUsageTest() throws ApiException {
        String customerExternalId = null;
        String externalSubscriptionId = null;
        CustomerUsage response = api.findCustomerCurrentUsage(customerExternalId, externalSubscriptionId);
        // TODO: test validations
    }

    /**
     * Get customer portal URL
     *
     * Get customer portal URL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCustomerPortalUrlTest() throws ApiException {
        String customerExternalId = null;
        GetCustomerPortalUrl200Response response = api.getCustomerPortalUrl(customerExternalId);
        // TODO: test validations
    }

}
