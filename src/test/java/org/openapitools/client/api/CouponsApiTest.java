/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseBadRequest;
import org.openapitools.client.model.ApiResponseNotFound;
import org.openapitools.client.model.ApiResponseUnauthorized;
import org.openapitools.client.model.ApiResponseUnprocessableEntity;
import org.openapitools.client.model.AppliedCoupon;
import org.openapitools.client.model.AppliedCouponInput;
import org.openapitools.client.model.AppliedCouponsPaginated;
import org.openapitools.client.model.Coupon;
import org.openapitools.client.model.CouponInput;
import org.openapitools.client.model.CouponsPaginated;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CouponsApi
 */
@Disabled
public class CouponsApiTest {

    private final CouponsApi api = new CouponsApi();

    /**
     * Apply a coupon to a customer
     *
     * Apply a coupon to a customer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void applyCouponTest() throws ApiException {
        AppliedCouponInput appliedCouponInput = null;
        AppliedCoupon response = api.applyCoupon(appliedCouponInput);
        // TODO: test validations
    }

    /**
     * Create a new coupon
     *
     * Create a new coupon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCouponTest() throws ApiException {
        CouponInput couponInput = null;
        Coupon response = api.createCoupon(couponInput);
        // TODO: test validations
    }

    /**
     * Delete a coupon
     *
     * Delete a coupon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void destroyCouponTest() throws ApiException {
        String code = null;
        Coupon response = api.destroyCoupon(code);
        // TODO: test validations
    }

    /**
     * Find Applied Coupons
     *
     * Find all applied coupons
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllAppliedCouponsTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        String status = null;
        String externalCustomerId = null;
        AppliedCouponsPaginated response = api.findAllAppliedCoupons(page, perPage, status, externalCustomerId);
        // TODO: test validations
    }

    /**
     * Find Coupons
     *
     * Find all coupons in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllCouponsTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        CouponsPaginated response = api.findAllCoupons(page, perPage);
        // TODO: test validations
    }

    /**
     * Find coupon by code
     *
     * Return a single coupon
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findCouponTest() throws ApiException {
        String code = null;
        Coupon response = api.findCoupon(code);
        // TODO: test validations
    }

    /**
     * Update an existing coupon
     *
     * Update an existing coupon by code
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCouponTest() throws ApiException {
        String code = null;
        CouponInput couponInput = null;
        Coupon response = api.updateCoupon(code, couponInput);
        // TODO: test validations
    }

}
