/*
 * Lago API documentation
 * Lago API allows your application to push customer information and metrics (events) from your application to the billing application.
 *
 * The version of the OpenAPI document: 0.32.0-beta
 * Contact: tech@getlago.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ApiResponseBadRequest;
import org.openapitools.client.model.ApiResponseNotAllowed;
import org.openapitools.client.model.ApiResponseNotFound;
import org.openapitools.client.model.ApiResponseUnauthorized;
import org.openapitools.client.model.ApiResponseUnprocessableEntity;
import org.openapitools.client.model.Invoice;
import org.openapitools.client.model.InvoiceInput;
import org.openapitools.client.model.InvoiceOneOffInput;
import org.openapitools.client.model.InvoicesPaginated;
import java.time.LocalDate;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InvoicesApi
 */
@Disabled
public class InvoicesApiTest {

    private final InvoicesApi api = new InvoicesApi();

    /**
     * Create a new invoice
     *
     * Create a new one off Invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createInvoiceTest() throws ApiException {
        InvoiceOneOffInput invoiceOneOffInput = null;
        Invoice response = api.createInvoice(invoiceOneOffInput);
        // TODO: test validations
    }

    /**
     * Download an existing invoice
     *
     * Download an existing invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadInvoiceTest() throws ApiException {
        UUID id = null;
        Invoice response = api.downloadInvoice(id);
        // TODO: test validations
    }

    /**
     * Finalize a draft invoice
     *
     * Finalize a draft invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void finalizeInvoiceTest() throws ApiException {
        UUID id = null;
        Invoice response = api.finalizeInvoice(id);
        // TODO: test validations
    }

    /**
     * Find all invoices
     *
     * Find all invoices in certain organisation
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findAllInvoicesTest() throws ApiException {
        Integer page = null;
        Integer perPage = null;
        String externalCustomerId = null;
        LocalDate issuingDateFrom = null;
        LocalDate issuingDateTo = null;
        String status = null;
        InvoicesPaginated response = api.findAllInvoices(page, perPage, externalCustomerId, issuingDateFrom, issuingDateTo, status);
        // TODO: test validations
    }

    /**
     * Find invoice by ID
     *
     * Return a single invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void findInvoiceTest() throws ApiException {
        UUID id = null;
        Invoice response = api.findInvoice(id);
        // TODO: test validations
    }

    /**
     * Refresh a draft invoice
     *
     * Refresh a draft invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void refreshInvoiceTest() throws ApiException {
        UUID id = null;
        Invoice response = api.refreshInvoice(id);
        // TODO: test validations
    }

    /**
     * Retry invoice payment
     *
     * Retry invoice payment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void retryPaymentTest() throws ApiException {
        UUID id = null;
        api.retryPayment(id);
        // TODO: test validations
    }

    /**
     * Update an existing invoice status
     *
     * Update an existing invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInvoiceTest() throws ApiException {
        UUID id = null;
        InvoiceInput invoiceInput = null;
        Invoice response = api.updateInvoice(id, invoiceInput);
        // TODO: test validations
    }

}
